version: 2
jobs:
  build:
    brnaches:
      only:
        - master
    #machine: true
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run Test
          command: |
            pwd
            npm start &        
    #steps:
    #  - checkout
    #  - run: 
    #      name: NodeJS Docker Build
    #      command: docker build -t shinmaeng/jessie-node ./
    #  - run:
    #      name: Docker MongoDB Run
    #      command: docker run --name mongodb -d -v /data/db:/data/db --hostname MONGODB --net=bridge --expose=27017 mongo mongod --bind_ip_all
    #  - run:
    #      name: Dokcer NodeJS Run
    #      command: docker run -d --name jessie-nodejs -p 4000:4000 --link mongodb:mongodb shinmaeng/jessie-node
    #  - run:
    #      name: Confirm Docker container status
    #      command: |
    #        docker logs --follow jessie-nodejs &
    #        docker ps -a
    #        docker inspect jessie-nodejs    
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run: |
          echo ${HOME}
          echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Docker Build
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            pwd
            ls -lr
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t gcr.io/${GOOGLE_PROJECT_ID}/nodejs:$TAG .
            #docker tag ${GOOGLE_PROJECT_ID} shinmaeng/nodejs:$TAG
            #gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            docker run --name mongodb -d -v /data/db:/data/db --hostname MONGODB --net=bridge --expose=27017 mongo mongod --bind_ip_all 
            docker run --name yeoul_nodejs -d -p 4000:4000 --link mongodb:mongodb -it --net=bridge gcr.io/${GOOGLE_PROJECT_ID}/nodejs:$TAG
            docker images
            #docker login -u $DOCKER_USER -p $DOCKER_PASS
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker push gcr.io/${GOOGLE_PROJECT_ID}/nodejs:$TAG
      - run:
          name: Deploy to VM in GCP
          command: |
            gcloud compute ssh docker-nodejs
            docker rm -f yeoul_nodejs
            docker run --name yeoul_nodejs -d -p 4000:4000 --link mongodb:mongodb -it --net=bridge gcr.io/${GOOGLE_PROJECT_ID}/nodejs:$TAG
      #- run:  
      #    name: Deploy to Kubernetes
      #    command: |
      #      envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
      #      kubectl apply -f ${HOME}/patched_k8s.yml
      #      kubectl rollout status deployment/${PROJECT_NAME}            
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
